From: Gavin Lambert <gavin.lambert@tomra.com>
Date: Wed, 1 Jun 2016 10:01:30 +0200

Print redundancy device name with ring positions, as they're relative.

diff --git a/master/master.c b/master/master.c
--- a/master/master.c
+++ b/master/master.c
@@ -500,8 +500,9 @@ void ec_master_clear_slaves(ec_master_t 
             list_entry(master->sii_requests.next,
                     ec_sii_write_request_t, list);
         list_del_init(&request->list); // dequeue
-        EC_MASTER_WARN(master, "Discarding SII request, slave %u about"
-                " to be deleted.\n", request->slave->ring_position);
+        EC_MASTER_WARN(master, "Discarding SII request, slave %s-%u about"
+                " to be deleted.\n", ec_device_names[request->slave->device_index!=0],
+                request->slave->ring_position);
         request->state = EC_INT_REQUEST_FAILURE;
         wake_up_all(&master->request_queue);
     }
@@ -1605,8 +1606,9 @@ void ec_master_exec_slave_fsms(
 
     list_for_each_entry_safe(fsm, next, &master->fsm_exec_list, list) {
         if (!fsm->datagram) {
-            EC_MASTER_WARN(master, "Slave %u FSM has zero datagram."
-                    "This is a bug!\n", fsm->slave->ring_position);
+            EC_MASTER_WARN(master, "Slave %s-%u FSM has zero datagram."
+                    "This is a bug!\n", ec_device_names[fsm->slave->device_index!=0],
+                    fsm->slave->ring_position);
             list_del_init(&fsm->list);
             master->fsm_exec_count--;
             return;
@@ -1629,7 +1631,8 @@ void ec_master_exec_slave_fsms(
         }
 
 #if DEBUG_INJECT
-        EC_MASTER_DBG(master, 1, "Executing slave %u FSM.\n",
+        EC_MASTER_DBG(master, 1, "Executing slave %s-%u FSM.\n",
+                ec_device_names[fsm->slave->device_index!=0],
                 fsm->slave->ring_position);
 #endif
         if (ec_fsm_slave_exec(fsm, datagram)) {
@@ -1669,8 +1672,9 @@ void ec_master_exec_slave_fsms(
                         &master->fsm_exec_list);
                 master->fsm_exec_count++;
 #if DEBUG_INJECT
-                EC_MASTER_DBG(master, 1, "New slave %u FSM"
+                EC_MASTER_DBG(master, 1, "New slave %s-%u FSM"
                         " consumed datagram %s, now %u FSMs in list.\n",
+                        ec_device_names[master->fsm_slave->device_index!=0],
                         master->fsm_slave->ring_position, datagram->name,
                         master->fsm_exec_count);
 #endif
@@ -2230,12 +2234,14 @@ void ec_master_find_dc_ref_clock(
         if (slave) {
             if (slave->base_dc_supported && slave->has_dc_system_time) {
                 ref = slave;
-                EC_MASTER_INFO(master, "Using slave %u as application selected"
-                        " DC reference clock.\n", ref->ring_position);
+                EC_MASTER_INFO(master, "Using slave %s-%u as application selected"
+                        " DC reference clock.\n", ec_device_names[slave->device_index!=0],
+                        ref->ring_position);
             }
             else {
-                EC_MASTER_WARN(master, "Application selected slave %u can not"
-                        " act as a DC reference clock!", slave->ring_position);
+                EC_MASTER_WARN(master, "Application selected slave %s-%u can not"
+                        " act as a DC reference clock!", ec_device_names[slave->device_index!=0],
+                        slave->ring_position);
             }
         }
         else {
@@ -2262,8 +2268,8 @@ void ec_master_find_dc_ref_clock(
     master->dc_ref_clock = ref;
 
     if (ref) {
-        EC_MASTER_INFO(master, "Using slave %u as DC reference clock.\n",
-                ref->ring_position);
+        EC_MASTER_INFO(master, "Using slave %s-%u as DC reference clock.\n",
+                ec_device_names[ref->device_index!=0], ref->ring_position);
     }
     else {
         EC_MASTER_INFO(master, "No DC reference clock found.\n");
diff --git a/master/slave.h b/master/slave.h
--- a/master/slave.h
+++ b/master/slave.h
@@ -53,50 +53,51 @@
 /** Convenience macro for printing slave-specific information to syslog.
  *
  * This will print the message in \a fmt with a prefixed
- * "EtherCAT <INDEX>-<POSITION>: ", where INDEX is the master index and
- * POSITION is the slave's ring position.
+ * "EtherCAT <INDEX>-<DEV>-<POSITION>: ", where INDEX is the master index,
+ * DEV is the device, and POSITION is the slave's ring position.
  *
  * \param slave EtherCAT slave
  * \param fmt format string (like in printf())
  * \param args arguments (optional)
  */
 #define EC_SLAVE_INFO(slave, fmt, args...) \
-    printk(KERN_INFO "EtherCAT %u-%u: " fmt, slave->master->index, \
-            slave->ring_position, ##args)
+    printk(KERN_INFO "EtherCAT %u-%s-%u: " fmt, slave->master->index, \
+            ec_device_names[slave->device_index!=0], slave->ring_position, ##args)
 
 /** Convenience macro for printing slave-specific errors to syslog.
  *
  * This will print the message in \a fmt with a prefixed
- * "EtherCAT <INDEX>-<POSITION>: ", where INDEX is the master index and
- * POSITION is the slave's ring position.
+ * "EtherCAT <INDEX>-<DEV>-<POSITION>: ", where INDEX is the master index,
+ * DEV is the device, and POSITION is the slave's ring position.
  *
  * \param slave EtherCAT slave
  * \param fmt format string (like in printf())
  * \param args arguments (optional)
  */
 #define EC_SLAVE_ERR(slave, fmt, args...) \
-    printk(KERN_ERR "EtherCAT ERROR %u-%u: " fmt, slave->master->index, \
-            slave->ring_position, ##args)
+    printk(KERN_ERR "EtherCAT ERROR %u-%s-%u: " fmt, slave->master->index, \
+            ec_device_names[slave->device_index!=0], slave->ring_position, ##args)
 
 /** Convenience macro for printing slave-specific warnings to syslog.
  *
  * This will print the message in \a fmt with a prefixed
- * "EtherCAT <INDEX>-<POSITION>: ", where INDEX is the master index and
- * POSITION is the slave's ring position.
+ * "EtherCAT <INDEX>-<DEV>-<POSITION>: ", where INDEX is the master index,
+ * DEV is the device, and POSITION is the slave's ring position.
  *
  * \param slave EtherCAT slave
  * \param fmt format string (like in printf())
  * \param args arguments (optional)
  */
 #define EC_SLAVE_WARN(slave, fmt, args...) \
-    printk(KERN_WARNING "EtherCAT WARNING %u-%u: " fmt, \
-            slave->master->index, slave->ring_position, ##args)
+    printk(KERN_WARNING "EtherCAT WARNING %u-%s-%u: " fmt, \
+            slave->master->index, ec_device_names[slave->device_index!=0], \
+            slave->ring_position, ##args)
 
 /** Convenience macro for printing slave-specific debug messages to syslog.
  *
  * This will print the message in \a fmt with a prefixed
- * "EtherCAT <INDEX>-<POSITION>: ", where INDEX is the master index and
- * POSITION is the slave's ring position.
+ * "EtherCAT <INDEX>-<DEV>-<POSITION>: ", where INDEX is the master index,
+ * DEV is the device, and POSITION is the slave's ring position.
  *
  * \param slave EtherCAT slave
  * \param level Debug level. Master's debug level must be >= \a level for
@@ -107,8 +108,9 @@
 #define EC_SLAVE_DBG(slave, level, fmt, args...) \
     do { \
         if (slave->master->debug_level >= level) { \
-            printk(KERN_DEBUG "EtherCAT DEBUG %u-%u: " fmt, \
-                    slave->master->index, slave->ring_position, ##args); \
+            printk(KERN_DEBUG "EtherCAT DEBUG %u-%s-%u: " fmt, \
+                    slave->master->index, ec_device_names[slave->device_index!=0], \
+                    slave->ring_position, ##args); \
         } \
     } while (0)
 
diff --git a/master/slave_config.c b/master/slave_config.c
--- a/master/slave_config.c
+++ b/master/slave_config.c
@@ -253,8 +253,9 @@ int ec_slave_config_attach(
     }
 
     if (slave->config) {
-        EC_CONFIG_DBG(sc, 1, "Failed to attach configuration. Slave %u"
-                " already has a configuration!\n", slave->ring_position);
+        EC_CONFIG_DBG(sc, 1, "Failed to attach configuration. Slave %s-%u"
+                " already has a configuration!\n",
+                ec_device_names[slave->device_index!=0], slave->ring_position);
         return -EEXIST;
     }
 
@@ -264,9 +265,10 @@ int ec_slave_config_attach(
 #endif
             slave->sii.vendor_id != sc->vendor_id
        ) {
-        EC_CONFIG_DBG(sc, 1, "Slave %u has no matching vendor ID (0x%08X)"
+        EC_CONFIG_DBG(sc, 1, "Slave %s-%u has no matching vendor ID (0x%08X)"
                 " for configuration (0x%08X).\n",
-                slave->ring_position, slave->sii.vendor_id, sc->vendor_id);
+                ec_device_names[slave->device_index!=0], slave->ring_position,
+                slave->sii.vendor_id, sc->vendor_id);
         return -EINVAL;
     }
 
@@ -276,10 +278,10 @@ int ec_slave_config_attach(
 #endif
             slave->sii.product_code != sc->product_code
        ) {
-        EC_CONFIG_DBG(sc, 1, "Slave %u has no matching product code (0x%08X)"
+        EC_CONFIG_DBG(sc, 1, "Slave %s-%u has no matching product code (0x%08X)"
                 " for configuration (0x%08X).\n",
-                slave->ring_position, slave->sii.product_code,
-                sc->product_code);
+                ec_device_names[slave->device_index!=0], slave->ring_position,
+                slave->sii.product_code, sc->product_code);
         return -EINVAL;
     }
 
@@ -287,7 +289,8 @@ int ec_slave_config_attach(
     slave->config = sc;
     sc->slave = slave;
 
-    EC_CONFIG_DBG(sc, 1, "Attached slave %u.\n", slave->ring_position);
+    EC_CONFIG_DBG(sc, 1, "Attached slave %s-%u.\n",
+                ec_device_names[slave->device_index!=0], slave->ring_position);
     return 0;
 }
 
