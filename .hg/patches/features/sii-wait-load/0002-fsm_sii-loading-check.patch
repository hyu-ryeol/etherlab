From: Graeme Foot <graeme.foot@touchcut.com>
Date: Mon, 04 Mar 2019 13:53:00 +1200

Slave SII information may be read before the slave has finished
reading the SII data from the EEPROM.  This patch checks the
EEPROM not loaded bit and retries until it is cleared.

diff --git a/master/fsm_sii.c b/master/fsm_sii.c
--- a/master/fsm_sii.c
+++ b/master/fsm_sii.c
@@ -39,6 +39,15 @@
 #include "master.h"
 #include "fsm_sii.h"
 
+/** EEPROM load timeout [ms].
+ *
+ * Used to calculate timeouts bsed on the jiffies counter.
+ *
+ * \attention Must be more than 10 to avoid problems on kernels that run with
+ * a timer interupt frequency of 100 Hz.
+ */
+#define SII_LOAD_TIMEOUT 500
+
 /** Read/write timeout [ms].
  *
  * Used to calculate timeouts bsed on the jiffies counter.
@@ -304,6 +313,7 @@ void ec_fsm_sii_state_read_check(
 
     fsm->jiffies_start = fsm->datagram->jiffies_sent;
     fsm->check_once_more = 1;
+    fsm->eeprom_load_retry = 0;
 
     ec_fsm_sii_prepare_read_check(fsm, datagram);
     fsm->retries = EC_FSM_RETRIES;
@@ -354,6 +364,44 @@ void ec_fsm_sii_state_read_fetch(
         return;
     }
 
+    // check "EEPROM Loading bit"
+    if (EC_READ_U8(fsm->datagram->data + 1) & 0x10) { /* EEPROM not loaded */
+        unsigned long diff_ms;
+    
+        if (fsm->eeprom_load_retry == 0) {
+            fsm->eeprom_load_retry = 1;
+            EC_SLAVE_WARN(fsm->slave,
+                    "SII Read Error, EEPROM not loaded.  Retrying...\n");
+        }
+
+        // EEPROM still not loaded... timeout?
+        // May be due to an EEPROM load error
+        diff_ms =
+            (fsm->datagram->jiffies_received - fsm->jiffies_start) * 1000 / HZ;
+        if (diff_ms >= SII_LOAD_TIMEOUT) {
+            if (fsm->check_once_more) {
+                fsm->check_once_more = 0;
+            } else {
+                EC_SLAVE_ERR(fsm->slave, 
+                        "SII Error: Timeout waiting for EEPROM to load.\n");
+                fsm->state = ec_fsm_sii_state_error;
+                return;
+            }
+        }
+
+        // issue check/fetch datagram again
+        ec_fsm_sii_prepare_read_check(fsm, datagram);
+        fsm->retries = EC_FSM_RETRIES;
+        return;
+    } else if (fsm->eeprom_load_retry) {
+        fsm->eeprom_load_retry = 0;
+        EC_SLAVE_INFO(fsm->slave, "SII EEPROM loaded.  Continuing.\n");
+        
+        // start reading SII value again
+        fsm->state = ec_fsm_sii_state_start_reading;
+        return;
+    }
+    
     // check "busy bit"
     if (EC_READ_U8(fsm->datagram->data + 1) & 0x81) { /* busy bit or
                                                     read operation busy */
diff --git a/master/fsm_sii.h b/master/fsm_sii.h
--- a/master/fsm_sii.h
+++ b/master/fsm_sii.h
@@ -70,6 +70,7 @@ struct ec_fsm_sii
     uint8_t value[4]; /**< raw SII value (32bit) */
     unsigned long jiffies_start; /**< Start timestamp. */
     uint8_t check_once_more; /**< one more try after timeout */
+    uint8_t eeprom_load_retry; /**< waiting for eeprom to be loaded */
 };
 
 /*****************************************************************************/
