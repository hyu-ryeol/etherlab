From: Gavin Lambert <gavin.lambert@tomra.com>
Date: Wed, 1 Jun 2016 10:03:58 +0200

Added ecrt_sdo_request_write_with_size.

This permits writes to be a different size from the prior read.

diff --git a/include/ecrt.h b/include/ecrt.h
--- a/include/ecrt.h
+++ b/include/ecrt.h
@@ -1924,6 +1924,19 @@ void ecrt_sdo_request_write(
         ec_sdo_request_t *req /**< SDO request. */
         );
 
+/** Schedule an SDO write operation.
+ *
+ * \attention This method may not be called while ecrt_sdo_request_state()
+ * returns EC_REQUEST_BUSY.
+ *
+ * \attention The size must be less than or equal to the size specified
+ * when the request was created.
+ */
+void ecrt_sdo_request_write_with_size(
+        ec_sdo_request_t *req, /**< SDO request. */
+        size_t size /**< Size of data to write. */
+        );
+
 /** Schedule an SDO read operation.
  *
  * \attention This method may not be called while ecrt_sdo_request_state()
diff --git a/lib/sdo_request.c b/lib/sdo_request.c
--- a/lib/sdo_request.c
+++ b/lib/sdo_request.c
@@ -180,3 +180,22 @@ void ecrt_sdo_request_write(ec_sdo_reque
 }
 
 /*****************************************************************************/
+
+void ecrt_sdo_request_write_with_size(ec_sdo_request_t *req, size_t size)
+{
+    ec_ioctl_sdo_request_t data;
+    int ret;
+
+    data.config_index = req->config->index;
+    data.request_index = req->index;
+    data.data = req->data;
+    data.size = size;
+
+    ret = ioctl(req->config->master->fd, EC_IOCTL_SDO_REQUEST_WRITE, &data);
+    if (EC_IOCTL_IS_ERROR(ret)) {
+        EC_PRINT_ERR("Failed to command an SDO write operation : %s\n",
+                strerror(EC_IOCTL_ERRNO(ret)));
+    }
+}
+
+/*****************************************************************************/
diff --git a/master/sdo_request.c b/master/sdo_request.c
--- a/master/sdo_request.c
+++ b/master/sdo_request.c
@@ -243,6 +243,23 @@ void ecrt_sdo_request_write(ec_sdo_reque
 
 /*****************************************************************************/
 
+void ecrt_sdo_request_write_with_size(ec_sdo_request_t *req, size_t size)
+{
+    if (size > req->mem_size) {
+        EC_ERR("Request to write %zu bytes to SDO of size %zu.\n", size, req->mem_size);
+        req->state = EC_INT_REQUEST_FAILURE;
+        return;
+    }
+    req->data_size = size;
+    req->dir = EC_DIR_OUTPUT;
+    req->state = EC_INT_REQUEST_QUEUED;
+    req->errno = 0;
+    req->abort_code = 0x00000000;
+    req->jiffies_start = jiffies;
+}
+
+/*****************************************************************************/
+
 /** \cond */
 
 EXPORT_SYMBOL(ecrt_sdo_request_index);
